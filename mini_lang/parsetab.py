
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftGREATERLESSGREATEROREQUALLESSEQUALEQEQUALNEQUALleftPLUSMINUSleftTIMESDIVIDEAND BOOL COMMA COMMENT_MULTI COMMENT_SINGLE DIVIDE ELSE EQEQUAL EQUAL FALSE FLOAT FUNCTION GREATER GREATEROREQUAL IDENTIFIER IF INPUT INT LBRACE LESS LESSEQUAL LPAREN MINUS NEQUAL NUMBER OR PLUS PRINT RBRACE RETURN RPAREN SEMICOLON STR STRING TIMES TRUE WHILEprogram : statement\n               | program statementstatement : type IDENTIFIER SEMICOLON\n                 | type IDENTIFIER EQUAL expression SEMICOLONstatement : IDENTIFIER EQUAL expression SEMICOLONstatement : IF LPAREN expression RPAREN LBRACE program RBRACE\n                | IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACEstatement : RETURN expression SEMICOLONstatement : PRINT expression SEMICOLONstatement : INPUT expression SEMICOLONstatement : type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACEparams : params : type IDENTIFIER\n              | params COMMA type IDENTIFIERstatement : IDENTIFIER LPAREN args RPAREN SEMICOLONexpression : IDENTIFIER LPAREN args RPARENargs : args : expression\n            | args COMMA expressionexpression : expression OR expressionexpression : expression AND expressionexpression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATEROREQUAL expression\n                  | expression LESSEQUAL expression\n                  | expression EQEQUAL expression\n                  | expression NEQUAL expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : NUMBERexpression : STRINGexpression : IDENTIFIERexpression : TRUEexpression : FALSEexpression : LPAREN expression RPARENstatement : WHILE LPAREN expression RPAREN LBRACE program RBRACEtype : INT\n            | FLOAT\n            | BOOL\n            | STR\n            '
    
_lr_action_items = {'IDENTIFIER':([0,1,2,3,6,7,8,10,11,12,13,14,16,17,18,19,22,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,57,59,76,77,79,81,83,87,88,89,90,91,92,93,96,97,98,99,],[4,4,-1,15,21,21,21,-39,-40,-41,-42,-2,32,21,21,21,21,21,-3,21,-8,21,21,21,21,21,21,21,21,21,21,21,21,21,-9,-10,-5,21,-4,84,-15,4,4,4,4,4,94,-6,-38,4,-11,4,4,-7,]),'IF':([0,1,2,14,30,37,52,53,57,76,79,81,83,87,88,89,91,92,93,96,97,98,99,],[5,5,-1,-2,-3,-8,-9,-10,-5,-4,-15,5,5,5,5,5,-6,-38,5,-11,5,5,-7,]),'RETURN':([0,1,2,14,30,37,52,53,57,76,79,81,83,87,88,89,91,92,93,96,97,98,99,],[6,6,-1,-2,-3,-8,-9,-10,-5,-4,-15,6,6,6,6,6,-6,-38,6,-11,6,6,-7,]),'PRINT':([0,1,2,14,30,37,52,53,57,76,79,81,83,87,88,89,91,92,93,96,97,98,99,],[7,7,-1,-2,-3,-8,-9,-10,-5,-4,-15,7,7,7,7,7,-6,-38,7,-11,7,7,-7,]),'INPUT':([0,1,2,14,30,37,52,53,57,76,79,81,83,87,88,89,91,92,93,96,97,98,99,],[8,8,-1,-2,-3,-8,-9,-10,-5,-4,-15,8,8,8,8,8,-6,-38,8,-11,8,8,-7,]),'WHILE':([0,1,2,14,30,37,52,53,57,76,79,81,83,87,88,89,91,92,93,96,97,98,99,],[9,9,-1,-2,-3,-8,-9,-10,-5,-4,-15,9,9,9,9,9,-6,-38,9,-11,9,9,-7,]),'INT':([0,1,2,14,30,37,52,53,56,57,76,79,81,83,86,87,88,89,91,92,93,96,97,98,99,],[10,10,-1,-2,-3,-8,-9,-10,10,-5,-4,-15,10,10,10,10,10,10,-6,-38,10,-11,10,10,-7,]),'FLOAT':([0,1,2,14,30,37,52,53,56,57,76,79,81,83,86,87,88,89,91,92,93,96,97,98,99,],[11,11,-1,-2,-3,-8,-9,-10,11,-5,-4,-15,11,11,11,11,11,11,-6,-38,11,-11,11,11,-7,]),'BOOL':([0,1,2,14,30,37,52,53,56,57,76,79,81,83,86,87,88,89,91,92,93,96,97,98,99,],[12,12,-1,-2,-3,-8,-9,-10,12,-5,-4,-15,12,12,12,12,12,12,-6,-38,12,-11,12,12,-7,]),'STR':([0,1,2,14,30,37,52,53,56,57,76,79,81,83,86,87,88,89,91,92,93,96,97,98,99,],[13,13,-1,-2,-3,-8,-9,-10,13,-5,-4,-15,13,13,13,13,13,13,-6,-38,13,-11,13,13,-7,]),'$end':([1,2,14,30,37,52,53,57,76,79,91,92,96,99,],[0,-1,-2,-3,-8,-9,-10,-5,-4,-15,-6,-38,-11,-7,]),'RBRACE':([2,14,30,37,52,53,57,76,79,87,88,91,92,93,96,98,99,],[-1,-2,-3,-8,-9,-10,-5,-4,-15,91,92,-6,-38,96,-11,99,-7,]),'FUNCTION':([3,10,11,12,13,],[16,-39,-40,-41,-42,]),'EQUAL':([4,15,],[17,31,]),'LPAREN':([4,5,6,7,8,9,17,18,19,21,22,29,31,32,38,39,40,41,42,43,44,45,46,47,48,49,50,59,],[18,19,22,22,22,29,22,22,22,50,22,22,22,56,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'NUMBER':([6,7,8,17,18,19,22,29,31,38,39,40,41,42,43,44,45,46,47,48,49,50,59,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'STRING':([6,7,8,17,18,19,22,29,31,38,39,40,41,42,43,44,45,46,47,48,49,50,59,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TRUE':([6,7,8,17,18,19,22,29,31,38,39,40,41,42,43,44,45,46,47,48,49,50,59,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FALSE':([6,7,8,17,18,19,22,29,31,38,39,40,41,42,43,44,45,46,47,48,49,50,59,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'SEMICOLON':([15,20,21,23,24,25,26,27,28,33,55,58,61,62,63,64,65,66,67,68,69,70,71,72,74,82,],[30,37,-34,-32,-33,-35,-36,52,53,57,76,79,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,-16,]),'RPAREN':([18,21,23,24,25,26,34,35,36,50,51,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,80,82,84,94,],[-17,-34,-32,-33,-35,-36,58,-18,60,-17,74,75,-12,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,82,-37,85,-19,-16,-13,-14,]),'COMMA':([18,21,23,24,25,26,34,35,50,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,80,82,84,94,],[-17,-34,-32,-33,-35,-36,59,-18,-17,-12,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,59,-37,86,-19,-16,-13,-14,]),'OR':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[38,-34,-32,-33,-35,-36,38,38,38,38,38,38,38,38,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,38,-16,]),'AND':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[39,-34,-32,-33,-35,-36,39,39,39,39,39,39,39,39,39,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,39,-16,]),'GREATER':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[40,-34,-32,-33,-35,-36,40,40,40,40,40,40,40,40,40,40,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,40,-16,]),'LESS':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[41,-34,-32,-33,-35,-36,41,41,41,41,41,41,41,41,41,41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,41,-16,]),'GREATEROREQUAL':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[42,-34,-32,-33,-35,-36,42,42,42,42,42,42,42,42,42,42,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,42,-16,]),'LESSEQUAL':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[43,-34,-32,-33,-35,-36,43,43,43,43,43,43,43,43,43,43,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,43,-16,]),'EQEQUAL':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[44,-34,-32,-33,-35,-36,44,44,44,44,44,44,44,44,44,44,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,44,-16,]),'NEQUAL':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[45,-34,-32,-33,-35,-36,45,45,45,45,45,45,45,45,45,45,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,45,-16,]),'PLUS':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[46,-34,-32,-33,-35,-36,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-28,-29,-30,-31,-37,46,-16,]),'MINUS':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[47,-34,-32,-33,-35,-36,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-28,-29,-30,-31,-37,47,-16,]),'TIMES':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[48,-34,-32,-33,-35,-36,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-30,-31,-37,48,-16,]),'DIVIDE':([20,21,23,24,25,26,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,74,80,82,],[49,-34,-32,-33,-35,-36,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-30,-31,-37,49,-16,]),'LBRACE':([60,75,85,95,],[81,83,89,97,]),'ELSE':([91,],[95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,81,83,89,97,],[1,87,88,93,98,]),'statement':([0,1,81,83,87,88,89,93,97,98,],[2,14,2,2,14,14,2,14,2,14,]),'type':([0,1,56,81,83,86,87,88,89,93,97,98,],[3,3,77,3,3,90,3,3,3,3,3,3,]),'expression':([6,7,8,17,18,19,22,29,31,38,39,40,41,42,43,44,45,46,47,48,49,50,59,],[20,27,28,33,35,36,51,54,55,61,62,63,64,65,66,67,68,69,70,71,72,35,80,]),'args':([18,50,],[34,73,]),'params':([56,],[78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser.py',136),
  ('program -> program statement','program',2,'p_program','parser.py',137),
  ('statement -> type IDENTIFIER SEMICOLON','statement',3,'p_statement_declaration','parser.py',145),
  ('statement -> type IDENTIFIER EQUAL expression SEMICOLON','statement',5,'p_statement_declaration','parser.py',146),
  ('statement -> IDENTIFIER EQUAL expression SEMICOLON','statement',4,'p_statement_assign','parser.py',160),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_statement_if','parser.py',169),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','statement',11,'p_statement_if','parser.py',170),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement_return','parser.py',178),
  ('statement -> PRINT expression SEMICOLON','statement',3,'p_statement_print','parser.py',182),
  ('statement -> INPUT expression SEMICOLON','statement',3,'p_satement_input','parser.py',186),
  ('statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE','statement',9,'p_statement_function','parser.py',191),
  ('params -> <empty>','params',0,'p_params_empty','parser.py',196),
  ('params -> type IDENTIFIER','params',2,'p_params','parser.py',200),
  ('params -> params COMMA type IDENTIFIER','params',4,'p_params','parser.py',201),
  ('statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON','statement',5,'p_statement_function_call','parser.py',212),
  ('expression -> IDENTIFIER LPAREN args RPAREN','expression',4,'p_expression_function_call','parser.py',217),
  ('args -> <empty>','args',0,'p_args_empty','parser.py',221),
  ('args -> expression','args',1,'p_args','parser.py',225),
  ('args -> args COMMA expression','args',3,'p_args','parser.py',226),
  ('expression -> expression OR expression','expression',3,'p_expression_logical_or','parser.py',234),
  ('expression -> expression AND expression','expression',3,'p_expression_logical_and','parser.py',238),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','parser.py',243),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','parser.py',244),
  ('expression -> expression GREATEROREQUAL expression','expression',3,'p_expression_comparison','parser.py',245),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_expression_comparison','parser.py',246),
  ('expression -> expression EQEQUAL expression','expression',3,'p_expression_comparison','parser.py',247),
  ('expression -> expression NEQUAL expression','expression',3,'p_expression_comparison','parser.py',248),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','parser.py',253),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','parser.py',254),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','parser.py',255),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','parser.py',256),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',260),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',264),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',268),
  ('expression -> TRUE','expression',1,'p_expression_true','parser.py',272),
  ('expression -> FALSE','expression',1,'p_expression_false','parser.py',276),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',281),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_statement_while','parser.py',286),
  ('type -> INT','type',1,'p_type','parser.py',291),
  ('type -> FLOAT','type',1,'p_type','parser.py',292),
  ('type -> BOOL','type',1,'p_type','parser.py',293),
  ('type -> STR','type',1,'p_type','parser.py',294),
]
