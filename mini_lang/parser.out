Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT_MULTI
    COMMENT_SINGLE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> type IDENTIFIER SEMICOLON
Rule 4     statement -> type IDENTIFIER EQUAL expression SEMICOLON
Rule 5     statement -> IDENTIFIER EQUAL expression SEMICOLON
Rule 6     statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 7     statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 8     statement -> RETURN expression SEMICOLON
Rule 9     statement -> PRINT expression SEMICOLON
Rule 10    statement -> INPUT expression SEMICOLON
Rule 11    statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
Rule 12    params -> <empty>
Rule 13    params -> type IDENTIFIER
Rule 14    params -> params COMMA type IDENTIFIER
Rule 15    statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON
Rule 16    expression -> IDENTIFIER LPAREN args RPAREN
Rule 17    args -> <empty>
Rule 18    args -> expression
Rule 19    args -> args COMMA expression
Rule 20    expression -> expression OR expression
Rule 21    expression -> expression AND expression
Rule 22    expression -> expression GREATER expression
Rule 23    expression -> expression LESS expression
Rule 24    expression -> expression GREATEROREQUAL expression
Rule 25    expression -> expression LESSEQUAL expression
Rule 26    expression -> expression EQEQUAL expression
Rule 27    expression -> expression NEQUAL expression
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression TIMES expression
Rule 31    expression -> expression DIVIDE expression
Rule 32    expression -> NUMBER
Rule 33    expression -> STRING
Rule 34    expression -> IDENTIFIER
Rule 35    expression -> TRUE
Rule 36    expression -> FALSE
Rule 37    expression -> LPAREN expression RPAREN
Rule 38    statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 39    type -> INT
Rule 40    type -> FLOAT
Rule 41    type -> BOOL
Rule 42    type -> STR

Terminals, with rules where they appear

AND                  : 21
BOOL                 : 41
COMMA                : 14 19
COMMENT_MULTI        : 
COMMENT_SINGLE       : 
DIVIDE               : 31
ELSE                 : 7
EQEQUAL              : 26
EQUAL                : 4 5
FALSE                : 36
FLOAT                : 40
FUNCTION             : 11
GREATER              : 22
GREATEROREQUAL       : 24
IDENTIFIER           : 3 4 5 11 13 14 15 16 34
IF                   : 6 7
INPUT                : 10
INT                  : 39
LBRACE               : 6 7 7 11 38
LESS                 : 23
LESSEQUAL            : 25
LPAREN               : 6 7 11 15 16 37 38
MINUS                : 29
NEQUAL               : 27
NUMBER               : 32
OR                   : 20
PLUS                 : 28
PRINT                : 9
RBRACE               : 6 7 7 11 38
RETURN               : 8
RPAREN               : 6 7 11 15 16 37 38
SEMICOLON            : 3 4 5 8 9 10 15
STR                  : 42
STRING               : 33
TIMES                : 30
TRUE                 : 35
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

args                 : 15 16 19
expression           : 4 5 6 7 8 9 10 18 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 37 38
params               : 11 14
program              : 2 6 7 7 11 38 0
statement            : 1 2
type                 : 3 4 11 13 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    program                        shift and go to state 1
    statement                      shift and go to state 2
    type                           shift and go to state 3

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    statement                      shift and go to state 14
    type                           shift and go to state 3

state 2

    (1) program -> statement .

    IDENTIFIER      reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    PRINT           reduce using rule 1 (program -> statement .)
    INPUT           reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    INT             reduce using rule 1 (program -> statement .)
    FLOAT           reduce using rule 1 (program -> statement .)
    BOOL            reduce using rule 1 (program -> statement .)
    STR             reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)
    RBRACE          reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> type . IDENTIFIER SEMICOLON
    (4) statement -> type . IDENTIFIER EQUAL expression SEMICOLON
    (11) statement -> type . FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE

    IDENTIFIER      shift and go to state 15
    FUNCTION        shift and go to state 16


state 4

    (5) statement -> IDENTIFIER . EQUAL expression SEMICOLON
    (15) statement -> IDENTIFIER . LPAREN args RPAREN SEMICOLON

    EQUAL           shift and go to state 17
    LPAREN          shift and go to state 18


state 5

    (6) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 19


state 6

    (8) statement -> RETURN . expression SEMICOLON
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 20

state 7

    (9) statement -> PRINT . expression SEMICOLON
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 27

state 8

    (10) statement -> INPUT . expression SEMICOLON
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 28

state 9

    (38) statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 29


state 10

    (39) type -> INT .

    IDENTIFIER      reduce using rule 39 (type -> INT .)
    FUNCTION        reduce using rule 39 (type -> INT .)


state 11

    (40) type -> FLOAT .

    IDENTIFIER      reduce using rule 40 (type -> FLOAT .)
    FUNCTION        reduce using rule 40 (type -> FLOAT .)


state 12

    (41) type -> BOOL .

    IDENTIFIER      reduce using rule 41 (type -> BOOL .)
    FUNCTION        reduce using rule 41 (type -> BOOL .)


state 13

    (42) type -> STR .

    IDENTIFIER      reduce using rule 42 (type -> STR .)
    FUNCTION        reduce using rule 42 (type -> STR .)


state 14

    (2) program -> program statement .

    IDENTIFIER      reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    PRINT           reduce using rule 2 (program -> program statement .)
    INPUT           reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    INT             reduce using rule 2 (program -> program statement .)
    FLOAT           reduce using rule 2 (program -> program statement .)
    BOOL            reduce using rule 2 (program -> program statement .)
    STR             reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)
    RBRACE          reduce using rule 2 (program -> program statement .)


state 15

    (3) statement -> type IDENTIFIER . SEMICOLON
    (4) statement -> type IDENTIFIER . EQUAL expression SEMICOLON

    SEMICOLON       shift and go to state 30
    EQUAL           shift and go to state 31


state 16

    (11) statement -> type FUNCTION . IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE

    IDENTIFIER      shift and go to state 32


state 17

    (5) statement -> IDENTIFIER EQUAL . expression SEMICOLON
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 33

state 18

    (15) statement -> IDENTIFIER LPAREN . args RPAREN SEMICOLON
    (17) args -> .
    (18) args -> . expression
    (19) args -> . args COMMA expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    RPAREN          reduce using rule 17 (args -> .)
    COMMA           reduce using rule 17 (args -> .)
    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    args                           shift and go to state 34
    expression                     shift and go to state 35

state 19

    (6) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (7) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 36

state 20

    (8) statement -> RETURN expression . SEMICOLON
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 21

    (16) expression -> IDENTIFIER . LPAREN args RPAREN
    (34) expression -> IDENTIFIER .

    LPAREN          shift and go to state 50
    SEMICOLON       reduce using rule 34 (expression -> IDENTIFIER .)
    OR              reduce using rule 34 (expression -> IDENTIFIER .)
    AND             reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 34 (expression -> IDENTIFIER .)
    LESS            reduce using rule 34 (expression -> IDENTIFIER .)
    GREATEROREQUAL  reduce using rule 34 (expression -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 34 (expression -> IDENTIFIER .)
    EQEQUAL         reduce using rule 34 (expression -> IDENTIFIER .)
    NEQUAL          reduce using rule 34 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 34 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 34 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 34 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 34 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 34 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 34 (expression -> IDENTIFIER .)


state 22

    (37) expression -> LPAREN . expression RPAREN
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 51

state 23

    (32) expression -> NUMBER .

    SEMICOLON       reduce using rule 32 (expression -> NUMBER .)
    OR              reduce using rule 32 (expression -> NUMBER .)
    AND             reduce using rule 32 (expression -> NUMBER .)
    GREATER         reduce using rule 32 (expression -> NUMBER .)
    LESS            reduce using rule 32 (expression -> NUMBER .)
    GREATEROREQUAL  reduce using rule 32 (expression -> NUMBER .)
    LESSEQUAL       reduce using rule 32 (expression -> NUMBER .)
    EQEQUAL         reduce using rule 32 (expression -> NUMBER .)
    NEQUAL          reduce using rule 32 (expression -> NUMBER .)
    PLUS            reduce using rule 32 (expression -> NUMBER .)
    MINUS           reduce using rule 32 (expression -> NUMBER .)
    TIMES           reduce using rule 32 (expression -> NUMBER .)
    DIVIDE          reduce using rule 32 (expression -> NUMBER .)
    RPAREN          reduce using rule 32 (expression -> NUMBER .)
    COMMA           reduce using rule 32 (expression -> NUMBER .)


state 24

    (33) expression -> STRING .

    SEMICOLON       reduce using rule 33 (expression -> STRING .)
    OR              reduce using rule 33 (expression -> STRING .)
    AND             reduce using rule 33 (expression -> STRING .)
    GREATER         reduce using rule 33 (expression -> STRING .)
    LESS            reduce using rule 33 (expression -> STRING .)
    GREATEROREQUAL  reduce using rule 33 (expression -> STRING .)
    LESSEQUAL       reduce using rule 33 (expression -> STRING .)
    EQEQUAL         reduce using rule 33 (expression -> STRING .)
    NEQUAL          reduce using rule 33 (expression -> STRING .)
    PLUS            reduce using rule 33 (expression -> STRING .)
    MINUS           reduce using rule 33 (expression -> STRING .)
    TIMES           reduce using rule 33 (expression -> STRING .)
    DIVIDE          reduce using rule 33 (expression -> STRING .)
    RPAREN          reduce using rule 33 (expression -> STRING .)
    COMMA           reduce using rule 33 (expression -> STRING .)


state 25

    (35) expression -> TRUE .

    SEMICOLON       reduce using rule 35 (expression -> TRUE .)
    OR              reduce using rule 35 (expression -> TRUE .)
    AND             reduce using rule 35 (expression -> TRUE .)
    GREATER         reduce using rule 35 (expression -> TRUE .)
    LESS            reduce using rule 35 (expression -> TRUE .)
    GREATEROREQUAL  reduce using rule 35 (expression -> TRUE .)
    LESSEQUAL       reduce using rule 35 (expression -> TRUE .)
    EQEQUAL         reduce using rule 35 (expression -> TRUE .)
    NEQUAL          reduce using rule 35 (expression -> TRUE .)
    PLUS            reduce using rule 35 (expression -> TRUE .)
    MINUS           reduce using rule 35 (expression -> TRUE .)
    TIMES           reduce using rule 35 (expression -> TRUE .)
    DIVIDE          reduce using rule 35 (expression -> TRUE .)
    RPAREN          reduce using rule 35 (expression -> TRUE .)
    COMMA           reduce using rule 35 (expression -> TRUE .)


state 26

    (36) expression -> FALSE .

    SEMICOLON       reduce using rule 36 (expression -> FALSE .)
    OR              reduce using rule 36 (expression -> FALSE .)
    AND             reduce using rule 36 (expression -> FALSE .)
    GREATER         reduce using rule 36 (expression -> FALSE .)
    LESS            reduce using rule 36 (expression -> FALSE .)
    GREATEROREQUAL  reduce using rule 36 (expression -> FALSE .)
    LESSEQUAL       reduce using rule 36 (expression -> FALSE .)
    EQEQUAL         reduce using rule 36 (expression -> FALSE .)
    NEQUAL          reduce using rule 36 (expression -> FALSE .)
    PLUS            reduce using rule 36 (expression -> FALSE .)
    MINUS           reduce using rule 36 (expression -> FALSE .)
    TIMES           reduce using rule 36 (expression -> FALSE .)
    DIVIDE          reduce using rule 36 (expression -> FALSE .)
    RPAREN          reduce using rule 36 (expression -> FALSE .)
    COMMA           reduce using rule 36 (expression -> FALSE .)


state 27

    (9) statement -> PRINT expression . SEMICOLON
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 52
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 28

    (10) statement -> INPUT expression . SEMICOLON
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 53
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 29

    (38) statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 54

state 30

    (3) statement -> type IDENTIFIER SEMICOLON .

    IDENTIFIER      reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    IF              reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    INPUT           reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    INT             reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    STR             reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    $end            reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 3 (statement -> type IDENTIFIER SEMICOLON .)


state 31

    (4) statement -> type IDENTIFIER EQUAL . expression SEMICOLON
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 55

state 32

    (11) statement -> type FUNCTION IDENTIFIER . LPAREN params RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 56


state 33

    (5) statement -> IDENTIFIER EQUAL expression . SEMICOLON
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 57
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 34

    (15) statement -> IDENTIFIER LPAREN args . RPAREN SEMICOLON
    (19) args -> args . COMMA expression

    RPAREN          shift and go to state 58
    COMMA           shift and go to state 59


state 35

    (18) args -> expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 18 (args -> expression .)
    COMMA           reduce using rule 18 (args -> expression .)
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 36

    (6) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (7) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 60
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 37

    (8) statement -> RETURN expression SEMICOLON .

    IDENTIFIER      reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    INPUT           reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    STR             reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 8 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 8 (statement -> RETURN expression SEMICOLON .)


state 38

    (20) expression -> expression OR . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 61

state 39

    (21) expression -> expression AND . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 62

state 40

    (22) expression -> expression GREATER . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 63

state 41

    (23) expression -> expression LESS . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 64

state 42

    (24) expression -> expression GREATEROREQUAL . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 65

state 43

    (25) expression -> expression LESSEQUAL . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 66

state 44

    (26) expression -> expression EQEQUAL . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 67

state 45

    (27) expression -> expression NEQUAL . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 68

state 46

    (28) expression -> expression PLUS . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 69

state 47

    (29) expression -> expression MINUS . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 70

state 48

    (30) expression -> expression TIMES . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 71

state 49

    (31) expression -> expression DIVIDE . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 72

state 50

    (16) expression -> IDENTIFIER LPAREN . args RPAREN
    (17) args -> .
    (18) args -> . expression
    (19) args -> . args COMMA expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    RPAREN          reduce using rule 17 (args -> .)
    COMMA           reduce using rule 17 (args -> .)
    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    args                           shift and go to state 73
    expression                     shift and go to state 35

state 51

    (37) expression -> LPAREN expression . RPAREN
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 74
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 52

    (9) statement -> PRINT expression SEMICOLON .

    IDENTIFIER      reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    IF              reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    RETURN          reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    PRINT           reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    INPUT           reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    WHILE           reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    INT             reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    FLOAT           reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    BOOL            reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    STR             reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    $end            reduce using rule 9 (statement -> PRINT expression SEMICOLON .)
    RBRACE          reduce using rule 9 (statement -> PRINT expression SEMICOLON .)


state 53

    (10) statement -> INPUT expression SEMICOLON .

    IDENTIFIER      reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    IF              reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    RETURN          reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    PRINT           reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    INPUT           reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    WHILE           reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    INT             reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    FLOAT           reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    BOOL            reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    STR             reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    $end            reduce using rule 10 (statement -> INPUT expression SEMICOLON .)
    RBRACE          reduce using rule 10 (statement -> INPUT expression SEMICOLON .)


state 54

    (38) statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 75
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 55

    (4) statement -> type IDENTIFIER EQUAL expression . SEMICOLON
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 76
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 56

    (11) statement -> type FUNCTION IDENTIFIER LPAREN . params RPAREN LBRACE program RBRACE
    (12) params -> .
    (13) params -> . type IDENTIFIER
    (14) params -> . params COMMA type IDENTIFIER
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    RPAREN          reduce using rule 12 (params -> .)
    COMMA           reduce using rule 12 (params -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    type                           shift and go to state 77
    params                         shift and go to state 78

state 57

    (5) statement -> IDENTIFIER EQUAL expression SEMICOLON .

    IDENTIFIER      reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    INPUT           reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    INT             reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    BOOL            reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    STR             reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> IDENTIFIER EQUAL expression SEMICOLON .)


state 58

    (15) statement -> IDENTIFIER LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 79


state 59

    (19) args -> args COMMA . expression
    (16) expression -> . IDENTIFIER LPAREN args RPAREN
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression GREATER expression
    (23) expression -> . expression LESS expression
    (24) expression -> . expression GREATEROREQUAL expression
    (25) expression -> . expression LESSEQUAL expression
    (26) expression -> . expression EQEQUAL expression
    (27) expression -> . expression NEQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . NUMBER
    (33) expression -> . STRING
    (34) expression -> . IDENTIFIER
    (35) expression -> . TRUE
    (36) expression -> . FALSE
    (37) expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 21
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 22

    expression                     shift and go to state 80

state 60

    (6) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (7) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 81


state 61

    (20) expression -> expression OR expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 20 (expression -> expression OR expression .)
    OR              reduce using rule 20 (expression -> expression OR expression .)
    RPAREN          reduce using rule 20 (expression -> expression OR expression .)
    COMMA           reduce using rule 20 (expression -> expression OR expression .)
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! AND             [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! GREATEROREQUAL  [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! LESSEQUAL       [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! EQEQUAL         [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! NEQUAL          [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 38 ]


state 62

    (21) expression -> expression AND expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 21 (expression -> expression AND expression .)
    OR              reduce using rule 21 (expression -> expression AND expression .)
    AND             reduce using rule 21 (expression -> expression AND expression .)
    RPAREN          reduce using rule 21 (expression -> expression AND expression .)
    COMMA           reduce using rule 21 (expression -> expression AND expression .)
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! GREATER         [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! GREATEROREQUAL  [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! LESSEQUAL       [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! EQEQUAL         [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! NEQUAL          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]


state 63

    (22) expression -> expression GREATER expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 22 (expression -> expression GREATER expression .)
    OR              reduce using rule 22 (expression -> expression GREATER expression .)
    AND             reduce using rule 22 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 22 (expression -> expression GREATER expression .)
    LESS            reduce using rule 22 (expression -> expression GREATER expression .)
    GREATEROREQUAL  reduce using rule 22 (expression -> expression GREATER expression .)
    LESSEQUAL       reduce using rule 22 (expression -> expression GREATER expression .)
    EQEQUAL         reduce using rule 22 (expression -> expression GREATER expression .)
    NEQUAL          reduce using rule 22 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 22 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 22 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 22 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]


state 64

    (23) expression -> expression LESS expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 23 (expression -> expression LESS expression .)
    OR              reduce using rule 23 (expression -> expression LESS expression .)
    AND             reduce using rule 23 (expression -> expression LESS expression .)
    GREATER         reduce using rule 23 (expression -> expression LESS expression .)
    LESS            reduce using rule 23 (expression -> expression LESS expression .)
    GREATEROREQUAL  reduce using rule 23 (expression -> expression LESS expression .)
    LESSEQUAL       reduce using rule 23 (expression -> expression LESS expression .)
    EQEQUAL         reduce using rule 23 (expression -> expression LESS expression .)
    NEQUAL          reduce using rule 23 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 23 (expression -> expression LESS expression .)
    COMMA           reduce using rule 23 (expression -> expression LESS expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LESS expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]


state 65

    (24) expression -> expression GREATEROREQUAL expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    OR              reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    AND             reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    GREATER         reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    LESS            reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    GREATEROREQUAL  reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    LESSEQUAL       reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    EQEQUAL         reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    NEQUAL          reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    RPAREN          reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    COMMA           reduce using rule 24 (expression -> expression GREATEROREQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 24 (expression -> expression GREATEROREQUAL expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GREATEROREQUAL expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression GREATEROREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression GREATEROREQUAL expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]


state 66

    (25) expression -> expression LESSEQUAL expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    OR              reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    AND             reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    GREATER         reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    LESS            reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    GREATEROREQUAL  reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    LESSEQUAL       reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    EQEQUAL         reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    NEQUAL          reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    RPAREN          reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    COMMA           reduce using rule 25 (expression -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 25 (expression -> expression LESSEQUAL expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression LESSEQUAL expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression LESSEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression LESSEQUAL expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]


state 67

    (26) expression -> expression EQEQUAL expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 26 (expression -> expression EQEQUAL expression .)
    OR              reduce using rule 26 (expression -> expression EQEQUAL expression .)
    AND             reduce using rule 26 (expression -> expression EQEQUAL expression .)
    GREATER         reduce using rule 26 (expression -> expression EQEQUAL expression .)
    LESS            reduce using rule 26 (expression -> expression EQEQUAL expression .)
    GREATEROREQUAL  reduce using rule 26 (expression -> expression EQEQUAL expression .)
    LESSEQUAL       reduce using rule 26 (expression -> expression EQEQUAL expression .)
    EQEQUAL         reduce using rule 26 (expression -> expression EQEQUAL expression .)
    NEQUAL          reduce using rule 26 (expression -> expression EQEQUAL expression .)
    RPAREN          reduce using rule 26 (expression -> expression EQEQUAL expression .)
    COMMA           reduce using rule 26 (expression -> expression EQEQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 26 (expression -> expression EQEQUAL expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression EQEQUAL expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression EQEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression EQEQUAL expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]


state 68

    (27) expression -> expression NEQUAL expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 27 (expression -> expression NEQUAL expression .)
    OR              reduce using rule 27 (expression -> expression NEQUAL expression .)
    AND             reduce using rule 27 (expression -> expression NEQUAL expression .)
    GREATER         reduce using rule 27 (expression -> expression NEQUAL expression .)
    LESS            reduce using rule 27 (expression -> expression NEQUAL expression .)
    GREATEROREQUAL  reduce using rule 27 (expression -> expression NEQUAL expression .)
    LESSEQUAL       reduce using rule 27 (expression -> expression NEQUAL expression .)
    EQEQUAL         reduce using rule 27 (expression -> expression NEQUAL expression .)
    NEQUAL          reduce using rule 27 (expression -> expression NEQUAL expression .)
    RPAREN          reduce using rule 27 (expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 27 (expression -> expression NEQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 27 (expression -> expression NEQUAL expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression NEQUAL expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression NEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression NEQUAL expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]


state 69

    (28) expression -> expression PLUS expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 28 (expression -> expression PLUS expression .)
    OR              reduce using rule 28 (expression -> expression PLUS expression .)
    AND             reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 28 (expression -> expression PLUS expression .)
    LESS            reduce using rule 28 (expression -> expression PLUS expression .)
    GREATEROREQUAL  reduce using rule 28 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 28 (expression -> expression PLUS expression .)
    EQEQUAL         reduce using rule 28 (expression -> expression PLUS expression .)
    NEQUAL          reduce using rule 28 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 28 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! TIMES           [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]


state 70

    (29) expression -> expression MINUS expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 29 (expression -> expression MINUS expression .)
    OR              reduce using rule 29 (expression -> expression MINUS expression .)
    AND             reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 29 (expression -> expression MINUS expression .)
    LESS            reduce using rule 29 (expression -> expression MINUS expression .)
    GREATEROREQUAL  reduce using rule 29 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 29 (expression -> expression MINUS expression .)
    EQEQUAL         reduce using rule 29 (expression -> expression MINUS expression .)
    NEQUAL          reduce using rule 29 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 29 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! TIMES           [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]


state 71

    (30) expression -> expression TIMES expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 30 (expression -> expression TIMES expression .)
    OR              reduce using rule 30 (expression -> expression TIMES expression .)
    AND             reduce using rule 30 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 30 (expression -> expression TIMES expression .)
    LESS            reduce using rule 30 (expression -> expression TIMES expression .)
    GREATEROREQUAL  reduce using rule 30 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 30 (expression -> expression TIMES expression .)
    EQEQUAL         reduce using rule 30 (expression -> expression TIMES expression .)
    NEQUAL          reduce using rule 30 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 30 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 30 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 30 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 30 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 30 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 30 (expression -> expression TIMES expression .)

  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]


state 72

    (31) expression -> expression DIVIDE expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 31 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 31 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 31 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 31 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    GREATEROREQUAL  reduce using rule 31 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 31 (expression -> expression DIVIDE expression .)
    EQEQUAL         reduce using rule 31 (expression -> expression DIVIDE expression .)
    NEQUAL          reduce using rule 31 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 31 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 31 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 31 (expression -> expression DIVIDE expression .)

  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! GREATEROREQUAL  [ shift and go to state 42 ]
  ! LESSEQUAL       [ shift and go to state 43 ]
  ! EQEQUAL         [ shift and go to state 44 ]
  ! NEQUAL          [ shift and go to state 45 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]


state 73

    (16) expression -> IDENTIFIER LPAREN args . RPAREN
    (19) args -> args . COMMA expression

    RPAREN          shift and go to state 82
    COMMA           shift and go to state 59


state 74

    (37) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GREATEROREQUAL  reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    EQEQUAL         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 37 (expression -> LPAREN expression RPAREN .)


state 75

    (38) statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 83


state 76

    (4) statement -> type IDENTIFIER EQUAL expression SEMICOLON .

    IDENTIFIER      reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    INPUT           reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    INT             reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    BOOL            reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    STR             reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> type IDENTIFIER EQUAL expression SEMICOLON .)


state 77

    (13) params -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 84


state 78

    (11) statement -> type FUNCTION IDENTIFIER LPAREN params . RPAREN LBRACE program RBRACE
    (14) params -> params . COMMA type IDENTIFIER

    RPAREN          shift and go to state 85
    COMMA           shift and go to state 86


state 79

    (15) statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .

    IDENTIFIER      reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    PRINT           reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    INPUT           reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    INT             reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    FLOAT           reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    BOOL            reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    STR             reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)
    RBRACE          reduce using rule 15 (statement -> IDENTIFIER LPAREN args RPAREN SEMICOLON .)


state 80

    (19) args -> args COMMA expression .
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . GREATER expression
    (23) expression -> expression . LESS expression
    (24) expression -> expression . GREATEROREQUAL expression
    (25) expression -> expression . LESSEQUAL expression
    (26) expression -> expression . EQEQUAL expression
    (27) expression -> expression . NEQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 19 (args -> args COMMA expression .)
    COMMA           reduce using rule 19 (args -> args COMMA expression .)
    OR              shift and go to state 38
    AND             shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    GREATEROREQUAL  shift and go to state 42
    LESSEQUAL       shift and go to state 43
    EQEQUAL         shift and go to state 44
    NEQUAL          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 81

    (6) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (7) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    program                        shift and go to state 87
    statement                      shift and go to state 2
    type                           shift and go to state 3

state 82

    (16) expression -> IDENTIFIER LPAREN args RPAREN .

    SEMICOLON       reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    OR              reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    AND             reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    GREATER         reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    LESS            reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    GREATEROREQUAL  reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    EQEQUAL         reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    NEQUAL          reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    PLUS            reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    MINUS           reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    TIMES           reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    DIVIDE          reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    RPAREN          reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)
    COMMA           reduce using rule 16 (expression -> IDENTIFIER LPAREN args RPAREN .)


state 83

    (38) statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    program                        shift and go to state 88
    statement                      shift and go to state 2
    type                           shift and go to state 3

state 84

    (13) params -> type IDENTIFIER .

    RPAREN          reduce using rule 13 (params -> type IDENTIFIER .)
    COMMA           reduce using rule 13 (params -> type IDENTIFIER .)


state 85

    (11) statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 89


state 86

    (14) params -> params COMMA . type IDENTIFIER
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    type                           shift and go to state 90

state 87

    (6) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (7) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (2) program -> program . statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    RBRACE          shift and go to state 91
    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    statement                      shift and go to state 14
    type                           shift and go to state 3

state 88

    (38) statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    RBRACE          shift and go to state 92
    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    statement                      shift and go to state 14
    type                           shift and go to state 3

state 89

    (11) statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    type                           shift and go to state 3
    program                        shift and go to state 93
    statement                      shift and go to state 2

state 90

    (14) params -> params COMMA type . IDENTIFIER

    IDENTIFIER      shift and go to state 94


state 91

    (6) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (7) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    IDENTIFIER      reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INPUT           reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOL            reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    STR             reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 95


state 92

    (38) statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    IDENTIFIER      reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INPUT           reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOL            reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    STR             reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 93

    (11) statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    RBRACE          shift and go to state 96
    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    type                           shift and go to state 3
    statement                      shift and go to state 14

state 94

    (14) params -> params COMMA type IDENTIFIER .

    RPAREN          reduce using rule 14 (params -> params COMMA type IDENTIFIER .)
    COMMA           reduce using rule 14 (params -> params COMMA type IDENTIFIER .)


state 95

    (7) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 97


state 96

    (11) statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .

    IDENTIFIER      reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    INPUT           reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    BOOL            reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    STR             reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 11 (statement -> type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE .)


state 97

    (7) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    program                        shift and go to state 98
    statement                      shift and go to state 2
    type                           shift and go to state 3

state 98

    (7) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . type IDENTIFIER SEMICOLON
    (4) statement -> . type IDENTIFIER EQUAL expression SEMICOLON
    (5) statement -> . IDENTIFIER EQUAL expression SEMICOLON
    (6) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (8) statement -> . RETURN expression SEMICOLON
    (9) statement -> . PRINT expression SEMICOLON
    (10) statement -> . INPUT expression SEMICOLON
    (11) statement -> . type FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE program RBRACE
    (15) statement -> . IDENTIFIER LPAREN args RPAREN SEMICOLON
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . BOOL
    (42) type -> . STR

    RBRACE          shift and go to state 99
    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    RETURN          shift and go to state 6
    PRINT           shift and go to state 7
    INPUT           shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    BOOL            shift and go to state 12
    STR             shift and go to state 13

    statement                      shift and go to state 14
    type                           shift and go to state 3

state 99

    (7) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    IDENTIFIER      reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RETURN          reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    PRINT           reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INPUT           reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INT             reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FLOAT           reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    BOOL            reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    STR             reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 7 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)

